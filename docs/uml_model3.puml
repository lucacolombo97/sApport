@startuml ModelUML
package Model {
    package Chat {
        class "Message" {
            +String* idFrom
            +String* idTo
            +DateTime* timestamp
            +String* content
            +Collections* collections
            +void setFromDocument()
            +dynamic getData()
        }
        "Message" o-- "Collections"
        "DbItem" <|-- "Message"

        abstract class "Chat" {
            +Collections* targetCollections
            +Collections* chatCollections
        }
        "Chat" o-- "Collections"

        class "Conversation" {
            +User* senderUser
            +User* peerUser
            +Chat* senderUserChat
            +Chat* peerUserChat
            +String* pairChatId
            +void computePairChatId()
        }
        "Conversation" o-- "User"
        "Conversation" o-- "Chat"

        class "ExpertChat" {
        }
        "Chat" <|-- "ExpertChat"

        class "PendingChat" {
        }
        "Chat" <|-- "PendingChat"

        class "ActiveChat" {
        }
        "Chat" <|-- "ActiveChat"

        class "Request" {
        }
        "Chat" <|-- "Request"
    }

    package Services {
        class "FirebaseAuthService" {
            -FirestoreService* _firestoreService
            -FirebaseAuth* _firebaseAuth
            -UserCredential* _userCredential
            +Future<String*>* signInWithEmailAndPassword()
            +Future<String*>* createUserWithEmailAndPassword()
            +Future<String*>* signInWithGoogle()
            +Future<String*>* signInWithFacebook()
            +Future<dynamic>* sendEmailVerification()
            +Future<dynamic>* deleteUser()
            +Future<dynamic>* signOut()
            +Future<String*>* currentUser()
        }
        "FirebaseAuthService" o-- "FirestoreService"
        "FirebaseAuthService" o-- "fireauth::FirebaseAuth"
        "FirebaseAuthService" o-- "fireauth::UserCredential"

        class "FirestoreService" {
            -FirebaseFirestore* _firestore
            -int* _limit
            +Future<void>* addUserIntoDB()
            +Future<void>* removeUserFromDB()
            +Future<void>* updateUserFieldIntoDB()
            +Future<QuerySnapshot<Object*>*>* getBaseCollectionsFromDB()
            +Future<DocumentSnapshot<Object*>*>* getUserByIdFromDB()
            -Future<List<dynamic>*>* _getUsersByList()
            -Future<void>* _incrementBaseCollectionsCounter()
            -Future<int*>* _getBaseCollectionsCounter()
            +Future<BaseUser*>* getRandomUserFromDB()
            +Future<Collections*>* findUserInCollectionss()
            +Future<void>* uploadProfilePhoto()
            +Future<void>* addMessageIntoDB()
            -Future<void>* _addMessageIntoMessagesCollections()
            +Stream<QuerySnapshot<Object*>*>* getStreamMessagesFromDB()
            +Future<bool*>* hasMessages()
            +Future<void>* removeMessagesFromDB()
            +Future<void>* addChatIntoDB()
            +Future<void>* upgradePendingToActiveChatIntoDB()
            +Future<void>* removeChatFromDB()
            +Future<List<dynamic>*>* getChatsFromDB()
            -Future<List<dynamic>*>* _getChatIds()
            -Future<void>* _incrementChatsCounter()
            -Future<int*>* _getChatsCounterFromDB()
            +Future<void>* addReportIntoDB()
            +Stream<QuerySnapshot<Object*>*>* getReportsFromDB()
        }
        "FirestoreService" o-- "cloud_firestore::FirebaseFirestore"

        enum "Collections" {
            USERS
            EXPERTS
            REPORTS
            MESSAGES
            UTILS
            ACTIVE_CHATS
            PENDING_CHATS
            REQUESTS_CHATS
            EXPERT_CHATS
        }

        class "NotificationService" {
            +User* user
            -FirebaseMessaging* _firebaseMessaging
            -FlutterLocalNotificationsPlugin* _flutterLocalNotificationsPlugin
            -FirestoreService* _firestoreService
            +void registerNotification()
            +void showNotification()
            +void configLocalNotification()
        }
        "NotificationService" o-- "User"
        "NotificationService" o-- "firemessaging::FirebaseMessaging"
    }
}
@enduml