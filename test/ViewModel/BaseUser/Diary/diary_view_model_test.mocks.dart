// Mocks generated by Mockito 5.0.17 from annotations
// in sApport/test/ViewModel/BaseUser/Diary/diary_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sApport/ViewModel/BaseUser/Diary/diary_form.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSink_0<T> extends _i1.Fake implements Sink<T> {}

/// A class which mocks [DiaryForm].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiaryForm extends _i1.Mock implements _i2.DiaryForm {
  MockDiaryForm() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Sink<dynamic> get title => (super.noSuchMethod(Invocation.getter(#title),
      returnValue: _FakeSink_0<dynamic>()) as Sink<dynamic>);
  @override
  Sink<dynamic> get content => (super.noSuchMethod(Invocation.getter(#content),
      returnValue: _FakeSink_0<dynamic>()) as Sink<dynamic>);
  @override
  _i3.Stream<bool> get isButtonEnabled =>
      (super.noSuchMethod(Invocation.getter(#isButtonEnabled),
          returnValue: Stream<bool>.empty()) as _i3.Stream<bool>);
  @override
  void resetControllers() =>
      super.noSuchMethod(Invocation.method(#resetControllers, []),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}
